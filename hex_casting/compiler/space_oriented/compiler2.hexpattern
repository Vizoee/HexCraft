

#def(dict_read)(#git(/hex_casting/programs/dictionary/dictionary_read.hexpattern))

#def(raven_stack)(0)
#def(raven_ident)(1)
#def(raven_var_count)(2)

#def(stack_obj_type)(0)
#def(stack_obj_eval)(1)
#def(stack_obj_val1)(2)
#def(stack_obj_val2)(3)

#def(ident_obj_type)(@str(identifier))

#def(malloc)(
    // stack: value
    Muninn's Reflection
    $raven_var_count
    Selection Distillation

    Muninn's Reflection
    Prospector's Gambit
    Numerical Reflection: 1
    Additive Distillation
    $raven_var_count
    Jester's Gambit
    Surgeon's Exaltation

    Flock's Reflection
    Subtractive Distillation
    Numerical Reflection: 2
    Additive Distillation
    Fisherman's Gambit
)

#def(get_stack_last)(
    Muninn's Reflection
    $raven_stack
    Selection Distillation
    Numerical Reflection: 0
    Selection Distillation
)

#def(pop_stack_last)(
    Muninn's Reflection
    Speaker's Decomposition
    Speaker's Decomposition
    Rotation Gambit II
    Speaker's Distillation
    Huginn's Gambit
    // stack: obj
)

#def(remove_stack_last)(
    Muninn's Reflection
    Speaker's Decomposition
    Speaker's Decomposition
    Bookkeeper's Gambit: v
    Speaker's Distillation
    Huginn's Gambit
)

#def(push_stack)(
    // stack: object
    Muninn's Reflection
    Speaker's Decomposition
    Rotation Gambit
    Speaker's Distillation
    Speaker's Distillation
    Huginn's Gambit
)

#def(value_obj)(
    // stack: value
    {@str(value)}>>
    {
        // stack: obj
        $stack_obj_val1
        Selection Distillation
    }
    Rotation Gambit
    Numerical Reflection: 3
    Flock's Gambit
)

#def(ident_obj)(
    // stack: name
    {$ident_obj_type}>>
    {
        // stack: obj
        $stack_obj_val1
        Selection Distillation
    }
    Rotation Gambit
    Numerical Reflection: 3
    Flock's Gambit
)

#def(setter_obj)(
    // stack: value
    Bookkeeper's Gambit: v
    {@str(setter)}>>

    {

    }

    $pop_stack_last
    Gemini Decomposition
    $stack_obj_type
    Selection Distillation
    {$ident_obj_type}>>
    Equality Distillation
    {}
    { // Error
        {@str(Error while parsing '='. Expected identifier but got )}>>
        Jester's Gambit
        $stack_obj_type
        Selection Distillation
        Additive Distillation
        Hermes' Gambit
    }
    Augur's Exaltation
    Hermes' Gambit

    Nullary Reflection

    Numerical Reflection: 4
    Flock's Gambit
)





{
    Flock's Disintegration
    // stack: list, index
    // check if string
    Dioscuri Gambit
    Selection Distillation
    Gemini Decomposition
    Classifier's Purification
    Scrivener's Purification
    {@str(moreiotas:string)}>>
    Equality Distillation
    {}
    {
        Bookkeeper's Gambit: v
        Numerical Reflection: 1
        Additive Distillation
        Numerical Reflection: 2
        Flock's Gambit
        Castor's Gambit
        Atalanta's Gambit
    }
    Augur's Exaltation
    Hermes' Gambit
    
    // check if not empty
    Gemini Decomposition
    Augur's Purification
    {
        Bookkeeper's Gambit: v
        Numerical Reflection: 1
        Additive Distillation
        Numerical Reflection: 2
        Flock's Gambit
        Castor's Gambit
        Atalanta's Gambit
    }
    {}
    Augur's Exaltation
    Hermes' Gambit

    // stack: list, index, string
    Gemini Decomposition
    Input Purification
    Nullary Reflection
    Equality Distillation
    {
        Input Purification
        $value_obj
        $push_stack

        Numerical Reflection: 2
        Flock's Gambit
        Castor's Gambit
    }
    {}
    Augur's Exaltation
    Hermes' Gambit
    

    {
        [
            @str(=)
        ],
        [
            $setter_obj
            $push_stack
        ]
    }
    Prospector's Gambit
    $dict_read

    Gemini Decomposition
    Augur's Purification
    {
        Hermes' Gambit
        Numerical Reflection: 2
        Flock's Gambit
        Castor's Gambit
    }
    {
        Bookkeeper's Gambit: v
    }
    Augur's Exaltation
    Hermes' Gambit
    

    $ident_obj
    $push_stack

    // end stack: list, index
    Numerical Reflection: 2
    Flock's Gambit
    Castor's Gambit
}
