#def(cassette)(@str(Cir))
#def(pos)(@vec(-991.5, 42.5, -136.5))
#def(rot)(@vec(1, 0, 1))
#def(temp)(@vec(0, 1, 0))



    
{
    @num(0)
    
    {$rot}>>
    // normalize
    Gemini Decomposition
    Length Purification
    Division Distillation
    // mesh, n
    // todo: check if n==temp - if yes then you don't need to rotate vector
    
    // calculate u
    Gemini Decomposition
    {$temp}>>
    Division Distillation
    // normalize
    Gemini Decomposition
    Length Purification
    Division Distillation
    // mesh, n, u

    // calculate v
    Undertaker's Gambit
    Division Distillation
    // mesh, u, v

    Timekeeper's Reflection
    Numerical Reflection: 10
    Division Distillation
    Undertaker's Gambit
    // mesh, u, t, v, t

    Sine Purification
    Multiplicative Distillation
    Rotation Gambit II
    
    Cosine Purification
    Multiplicative Distillation
    
    Additive Distillation
    
    Move Speck
    
    
    {$cassette}>>
    Gemini Decomposition
    Program Purification
    Numerical Reflection: 1
    Rotation Gambit
    Enqueue
}
Numerical Reflection: 1
{$cassette}>>
Enqueue