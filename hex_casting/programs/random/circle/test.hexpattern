#def(cassette)(@str(Cir))
#def(pos)(@vec(-991.5, 42.5, -136.5))
#def(rot)(@vec(0, 0, 1))
#def(temp)(@vec(0, 1, 0))

    
{
    @num(0)

    Timekeeper's Reflection
    Numerical Reflection: 10
    Division Distillation
    
    {$rot}>>

    // ..., t, n
    // todo: check if n==temp - if yes then you don't need to rotate vector
    // normalize
    Gemini Decomposition
    Length Purification
    Division Distillation
    Gemini Decomposition
    {@vec(0, 1, 0)}>>
    Multiplicative Distillation
    Inverse Cosine Purification
    Reveal
    {@num(0.01)}>>
    Minimus Distillation
    {
        Bookkeeper's Gambit: v
        Gemini Decomposition
        Cosine Purification
        Numerical Reflection: 0
        Rotation Gambit
        Sine Purification
        Vector Exaltation
    }
    {
        // ..., t, n
        // calculate u
        Gemini Decomposition
        {@vec(0, 1, 0)}>>
        Division Distillation
        // normalize
        Gemini Decomposition
        Length Purification
        Division Distillation
        // ..., t, n, u

        // calculate v
        Undertaker's Gambit
        Division Distillation
        // ..., t, u, v

        Rotation Gambit
        Undertaker's Gambit
        
        // ..., u, t, v, t

        Sine Purification
        Multiplicative Distillation
        Rotation Gambit II
        
        Cosine Purification
        Multiplicative Distillation
        
        Additive Distillation
    }
    Augur's Exaltation
    Hermes' Gambit
    // ..., vec


    
    {$pos}>>
    Additive Distillation
    

    Move Speck
    
    
    {$cassette}>>
    Gemini Decomposition
    Program Purification
    Numerical Reflection: 1
    Rotation Gambit
    Enqueue
}
Numerical Reflection: 1
{$cassette}>>
Enqueue